package com.github.ixre.fze.commons.std;

import org.junit.jupiter.api.Test;

import java.util.*;

public class TypesTest {
    List<Result> list;
    LangExtension lang = new LangExtension();


    public TypesTest() {
        list = new ArrayList<>();
        list.add(Result.create(1, "1.系统错误"));
        list.add(Result.create(2, "2.内部错误"));
        list.add(Result.create(3, "3.参数错误"));
    }

    @Test
    public void testToArray() {
        System.out.println((Class) Types.getActualType(list, 0));
        Integer[] arr = Types.asArray(list, a -> a.getErrCode());
        System.out.println(Types.toJson(arr));
        String[] msgArr = Types.asArray(list, a -> a.getErrMsg());
        System.out.println(Types.toJson(msgArr));
    }

    @Test
    public void testEach() {
        System.out.println("--测试无条件遍历");
        Types.each(list, a -> {
            System.out.println(a.getErrMsg());
        });
        System.out.println("--测试有条件循环");
        Types.each(list, a -> {
            System.out.println(a.getErrMsg());
            return a.getErrCode() == 1;
        });

        Integer[] arr = Types.asArray(list, a -> a.getErrCode());
        Types.eachArray(arr, a -> {
            System.out.println(a);
        });
    }

    @Test
    public void timeTest() {
        Typed.time.setTimeZone(TimeZone.getTimeZone("GMT+8"));
        int unix = 1534444176;
        Date d = Typed.time.unixTime(unix, 0);
        System.out.println(Typed.time.unixOfDate(d));
        System.out.println(Typed.time.unix());
    }

    @Test
    public void testUnmashal() {
        String json = "{\"ErrCode\":1,\"ErrMsg\":\"尚未登记\",\"Data\":{}}";
        Result r = Types.fromJson(json, Result.class);
        System.out.println("---" + Types.toJson(r));
    }

    @Test
    void mapObject() {
        Map<String, String> map = new HashMap<>();
        map.put("errCode", "1");
        map.put("errMsg", "haha");
        Foo f = Types.mapObject(map, Foo.class);
        System.out.println("---" + Types.toJson(f));
    }

    @Test
    void testStringTointeger() {
        String s = "1316";
        Integer integer = TypesConv.toInt(s);
        System.out.println(integer);
    }
}